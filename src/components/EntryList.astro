---
import PubDate from "@components/PubDate.astro";

const { entries } = Astro.props;
---

<ul role="list">
	{
		//@ts-ignore
		entries.map((entry) => {
			const basePath = entry.collection === "notes" ? "/notes" : "/articles";
			return (
				<li class="entry">
					<div class="center p-space-m">
						<article class="stack i-full max-i-full">
							<footer class="text-step--1 color-text-secondary">
								<PubDate date={entry.data.pubDate} />
							</footer>
							<div class="entry-content flow max-i-full">
								{entry.collection === "articles" && (
									<h2>
										<a href={`${basePath}/${entry.id}/`}>{entry.data.title}</a>
									</h2>
								)}
								<entry.Content />
							</div>
							<footer class="cluster text-step--1 color-text-secondary text-box-trim">
								<a
									class="text-box-trim"
									href={`${basePath}/${entry.id}#comments`}
								>
									Reply
								</a>
								<a
									class="text-box-trim"
									href={`${basePath}/${entry.id}/`}
									rel="bookmark"
								>
									More about this
								</a>
							</footer>
						</article>
					</div>
				</li>
			);
		})
	}
</ul>

<style is:global>
	@layer blocks {
		.entry + .entry {
			position: relative;

			&::before {
				--_border-angle: 90deg;
				content: "";
				position: absolute;
				background: var(--_border);
				z-index: -1;
				inset-inline: 0;
				inset-block-start: 0;
				inline-size: 100%;
				block-size: var(--border-thickness-s);
			}
		}

		.entry {
			article {
				--stack-horizontal-alignment: stretch;
			}

			[rel="bookmark"] {
				margin-inline-start: auto;
			}
		}
	}
</style>
