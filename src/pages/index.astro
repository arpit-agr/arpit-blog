---
import BaseLayout from "@layouts/BaseLayout.astro";
import BannerText from "@src/components/BannerText.astro";
import SiteHeader from "@src/components/SiteHeader.astro";
import PubDate from "@src/components/PubDate.astro";

import { SITE_DESCRIPTION, SITE_TITLE } from "@src/consts";
import { getCollection, render } from "astro:content";

const allNotes = await getCollection("notes");
const allArticles = await getCollection("articles");

const allEntries = [...allNotes, ...allArticles];
allEntries.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const entries = await Promise.all(
	allEntries.map(async (entry) => {
		const { Content } = await render(entry);
		return { ...entry, Content };
	}),
);
---

<BaseLayout
	bodyClass="homepage"
	pageTitle={SITE_TITLE}
	pageDesc={SITE_DESCRIPTION}
	ogType="website"
>
	<BannerText as="h1" />
	<div class="page">
		<SiteHeader />
		<main>
			<ul role="list">
				{
					entries.map((entry) => {
						const basePath =
							entry.collection === "notes" ? "/notes" : "/articles";
						return (
							<li>
								<div
									class="center p-space-m"
									style="--center-max-width: 40rem;"
								>
									<article class="stack max-i-full">
										<footer class="text-step--1 color-text-secondary">
											<PubDate date={entry.data.pubDate} />
										</footer>
										{entry.collection === "articles" && (
											<h2>
												<a href={`${basePath}/${entry.id}/`}>
													{entry.data.title}
												</a>
											</h2>
										)}
										<div class="content flow max-i-full">
											<entry.Content />
										</div>
										<footer class="repel text-step--1 color-text-secondary text-box-trim">
											<a
												class="text-box-trim"
												href={`${basePath}/${entry.id}#comments`}
											>
												Reply
											</a>
											<a
												class="text-box-trim"
												href={`${basePath}/${entry.id}/`}
												rel="bookmark"
											>
												More about this
											</a>
										</footer>
									</article>
								</div>
							</li>
						);
					})
				}
			</ul>
		</main>
	</div>
</BaseLayout>

<style is:global>
	@layer exceptions {
		.homepage {
			main li {
				+ li {
					border-block-start: var(--border-width-normal) solid
						var(--color-border-light);
				}

				article {
					--stack-horizontal-alignment: stretch;
				}
			}
		}
	}
</style>
