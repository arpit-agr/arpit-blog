---
import BaseLayout from "@layouts/BaseLayout.astro";

import { SITE_TITLE } from "@src/consts";
import { getCollection, render } from "astro:content";

const allNotes = await getCollection("notes");
const allArticles = await getCollection("articles");

const allEntries = [...allNotes, ...allArticles];
allEntries.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const entries = await Promise.all(
	allEntries.map(async (entry) => {
		const { Content } = await render(entry);
		return { ...entry, Content };
	}),
);
---

<BaseLayout
	bodyClass="homepage"
	pageTitle={SITE_TITLE}
	pageDesc="The digital garden of Arpit Agrawal, a web designer-developer from India."
	ogType="website"
>
	<h1>
		<span class="text-fit">
			<span><span>{SITE_TITLE}</span></span>
			<span aria-hidden="true">{SITE_TITLE}</span>
		</span>
	</h1>
	<main>
		<ul role="list">
			{
				entries.map((entry) => {
					const basePath =
						entry.collection === "notes" ? "/notes" : "/articles";
					return (
						<li>
							<article>
								<p>
									Posted on
									<time datetime={entry.data.pubDate.toISOString()}>
										{entry.data.pubDate.toLocaleString("en-IN", {
											year: "numeric",
											month: "short",
											day: "numeric",
										})}
									</time>
								</p>
								{entry.collection === "articles" && (
									<h2>
										<a href={`${basePath}/${entry.id}/`}>{entry.data.title}</a>
									</h2>
								)}
								<entry.Content />
								<p>
									<a href={`${basePath}/${entry.id}/`} rel="bookmark">
										More about this
									</a>
								</p>
							</article>
						</li>
					);
				})
			}
		</ul>
	</main>
</BaseLayout>
