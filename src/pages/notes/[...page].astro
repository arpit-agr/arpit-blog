---
import type { GetStaticPaths } from "astro";
import { getCollection, render } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";
import SiteHeader from "@components/SiteHeader.astro";
import FeedHeader from "@components/FeedHeader.astro";
import PaginatedEntries from "@components/PaginatedEntries.astro";
import Aside from "@components/Aside.astro";
import { NOTES_TITLE, NOTES_DESCRIPTION } from "src/consts";

export const getStaticPaths = (async ({ paginate }) => {
	const allNotes = await getCollection("notes", ({ data }) => {
		return import.meta.env.PROD ? data.draft !== true : true;
	});
	const allEntries = [...allNotes];
	allEntries.sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);
	return paginate(allEntries, { pageSize: 20 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const entries = await Promise.all(
	page.data.map(async (entry) => {
		const { Content } = await render(entry);
		return { ...entry, Content };
	}),
);
---

<BaseLayout
	bodyClass="homepage"
	pageTitle={NOTES_TITLE}
	pageDesc={NOTES_DESCRIPTION}
	ogType="website"
>
	<SiteHeader />
	<div class="page">
		<main id="main">
			<FeedHeader
				isVisuallyHidden={true}
				sectionTitle="Notes"
				sectionDesc={NOTES_DESCRIPTION}
			/>
			<PaginatedEntries page={page} entries={entries} />
		</main>
		<Aside />
	</div>
</BaseLayout>
