html {
	color-scheme: light dark;
}

body {
	margin: 0;
	max-inline-size: 40rem;
	margin-inline: auto;
	padding-inline: 1lh;
	background-color: hsl(0deg 0.83% 96.81%);
	font-family: system-ui, sans-serif;
	font-size: 1.1rem;
	line-height: 1.5;
	-webkit-font-smoothing: antialiased;
	font-size-adjust: from-font;
}

main {
	padding-block: 15vmin;
}

hgroup {
	padding: 1lh;
}

h1,
h2,
h3,
h4 {
	margin-block-start: 0;
	font-weight: 700;
}

/*h1 {
	text-transform: uppercase;
}*/

p {
	text-wrap: pretty;
}

a {
	color: inherit;
	text-underline-offset: 2px;
	text-decoration-color: hsl(from currentColor h s calc(l + 33));
	font-weight: 600;

	&:hover {
		text-decoration-color: currentColor;
		text-decoration-thickness: 2px;
	}

	:where(h1, h2, h3, h4) & {
		text-decoration-line: none;
	}
}

ul {
	margin: 0;
	padding: 0;
	list-style: none;
}

li {
	padding: 1lh;
	background-color: hsl(0deg 0.83% 99.81%);
	border-radius: 0.5lh;
}

li + li {
	margin-block-start: 1lh;
}

pre,
code {
	font-family: inherit;
	font-family: "Google Sans Code", monospace;
	font-optical-sizing: auto;

	border-radius: 0.25em;
}

pre {
	overflow-x: auto;
	tab-size: 2;
}

code {
	padding-inline: 2px;
	font-size: 0.9em;
}

/* home page styles */
.homepage {
	h1 {
		margin: 0;
		position: absolute;
		inset-block-start: 1lh;
		inset-inline: 0;
		padding-inline: 1lh;

		font-family: var(--font-display);
		font-weight: 400;
		line-height: 1;
		text-box: trim-both cap alphabetic;
		color: #feba21;
		mix-blend-mode: multiply;

		pointer-events: none;
	}
}

.text-fit {
	display: flex;
	container-type: inline-size;

	--captured-length: initial;
	--support-sentinel: var(--captured-length, 9999px);

	& > [aria-hidden] {
		visibility: hidden;
	}

	& > :not([aria-hidden]) {
		flex-grow: 1;
		container-type: inline-size;

		--captured-length: 100cqi;
		--available-space: var(--captured-length);

		& > * {
			--support-sentinel: inherit;
			--captured-length: 100cqi;
			--ratio: tan(
				atan2(
					var(--available-space),
					var(--available-space) - var(--captured-length)
				)
			);
			--font-size: clamp(
				1em,
				1em * var(--ratio),
				var(--max-font-size, infinity * 1px) - var(--support-sentinel)
			);
			inline-size: var(--available-space);

			&:not(.text-fit) {
				display: block;
				font-size: var(--font-size);

				@container (inline-size > 0) {
					white-space: nowrap;
				}
			}

			&.text-fit {
				--captured-length2: var(--font-size);
				font-variation-settings: "opsz" tan(atan2(var(--captured-length2), 1px));
			}
		}
	}
}

@property --captured-length {
	syntax: "<length>";
	initial-value: 0px;
	inherits: true;
}

@property --captured-length2 {
	syntax: "<length>";
	initial-value: 0px;
	inherits: true;
}
