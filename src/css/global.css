@view-transition {
	navigation: auto;
}

:root {
	--wrapper-max-width: 64rem;
	@custom-media --wrapper-max-width (min-width: 64rem);

	--measure: 60ch;
	--page-gutter: var(--space-m);
	--center-max-width: var(--measure);
}

:root {
	color-scheme: light;
	scrollbar-gutter: stable;
}

body {
	font-size: var(--step-0);
	color: var(--color-text-primary);
	background-color: var(--color-bg-primary);
	font-family: var(--font-sans-serif);
	font-size-adjust: from-font;
	line-height: var(--leading-normal);
	-webkit-font-smoothing: auto;
}

h1,
.heading-1,
h2,
.heading-2,
h3,
.heading-3 {
	font-weight: 600;
	font-family: var(--font-display);
}

h1,
.heading-1 {
	font-size: var(--step-2);
	line-height: var(--leading-snug);
}

h2,
.heading-2 {
	font-size: var(--step-1);
}

h3,
.heading-3 {
	font-size: var(--step-0);
}

a,
.link {
	--color-underline: oklch(from var(--color-accent) l c h / calc(0.5 * alpha));
	text-decoration-thickness: var(--border-thickness-l);
	text-decoration-color: var(--color-underline);

	&:hover {
		text-decoration-thickness: 0.125lh;
		text-decoration-style: solid;
		text-decoration-color: var(--color-accent);
		text-decoration-skip-ink: none;
	}
}

:where(ol, ul):not([role="list"]) {
	padding-inline-start: var(--page-gutter);
}

blockquote {
	font-style: italic;

	> * {
		--flow-space: 0.5lh;
	}

	p:first-child::before {
		content: open-quote;
		margin-inline-end: 1rem;
		float: inline-start;
		shape-outside: ellipse(
			calc(1.25 * var(--space-m)) var(--space-xs-s) at 20% 20%
		);

		font-family: var(--font-cursive);
		font-size: var(--step-4);
		font-style: normal;
		color: var(--color-accent);
		line-height: var(--leading-flat);
		/*-webkit-text-stroke: var(--space-5xs-4xs) var(--color-text-primary);
		text-shadow: var(--color-text-primary) 0 var(--space-5xs-4xs);
		paint-order: stroke fill;*/
	}

	p:last-child::after {
		content: close-quote;
		opacity: 0;
	}
}

pre,
code {
	font-family: var(--font-mono);
	font-size: var(--code-font-size);
	line-height: var(--leading-relaxed);
}

pre {
	padding: var(--code-padding-block) var(--code-padding-inline);
	outline: var(--border-thickness-s) solid var(--color-border-light);
	border-radius: var(--code-border-radius);
}

:not(pre) > code {
	padding-inline: 0.25ch;
	border-radius: var(--border-radius);
	background-color: var(--color-bg-secondary);
}

hr {
	color: var(--color-border-light);
}

::selection {
	background-color: oklch(from var(--color-accent) l c h / calc(0.5 * alpha));
}
